@page "/learnblazor/routing"
@page "/learnblazor/routing/{parameter1}"
@page "/learnblazor/routing/{parameter1:int}/{parameter2}"
@page "/routing"

@inject NavigationManager _NavigationManager

<MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom>Routing</MudText>
<MudText Typo="Typo.body1" GutterBottom>
    Parameter1: @Parameter1 <br />
    Parameter2: @Parameter2
</MudText>
<MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4 mr-4" @onclick="NavigateToRouting">Route Parameters</MudButton>

<MudText Typo="Typo.h4" Color="Color.Primary" GutterBottom Class="mt-8">Query Params</MudText>
<MudText Typo="Typo.body1" GutterBottom>
    Param1: @Param1 <br />
    Param2: @Param2
</MudText>
<MudButton Variant="Variant.Filled" Color="Color.Primary" Class="mt-4 mr-4" @onclick="NavigateToQueryParam">Query Parameters</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Success" Class="mt-4" @onclick="LoadParameters">Load Parameters</MudButton>

@code {
    [Parameter]
    public int Parameter1 { get; set; }
    [Parameter]
    public string Parameter2 { get; set; }

    [Parameter]
    public string Param1 { get; set; }
    [Parameter]
    public string Param2 { get; set; }

    private void LoadParameters()
    {
        var absoluteUri = new Uri(_NavigationManager.Uri);
        Console.WriteLine(absoluteUri);
        var queryParams = System.Web.HttpUtility.ParseQueryString(absoluteUri.Query);
        Console.WriteLine(queryParams);
        Param1 = queryParams["Param1"];
        Param2 = queryParams["Param2"];
    }

    private void NavigateToQueryParam()
    {
        _NavigationManager.NavigateTo("routing?Param1=Blazor&Param2=App"); 
    }

    private void NavigateToRouting()
    {
        _NavigationManager.NavigateTo("learnblazor/routing/123/456");
    }
}
