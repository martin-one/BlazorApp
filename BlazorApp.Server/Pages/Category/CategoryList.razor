@page "/category"

@inject ICategoryRepository _categoryRepository;

<MudGrid>
    <MudItem xs="12" md="6">
        <MudText Typo="Typo.h3" Color="Color.Primary">Category List</MudText>
    </MudItem>
    <MudItem xs="12" md="6" Class="mb-8">
        <div class="d-flex justify-end pt-2">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="category/create">Add New Category</MudButton>
        </div>
    </MudItem>
    <MudItem xs="12">
        @if (allCategories.Any())
        {
            <MudSimpleTable Hover Bordered>
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in allCategories)
                    {
                        <tr>
                            <th>@category.Id</th>
                            <th>@category.Name</th>
                            <th>
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" Href="@($"category/edit/{category.Id}")">Edit</MudButton>
                                <MudButton Variant="Variant.Filled" Color="Color.Error" Href=>Delete</MudButton>
                            </th>
                        </tr>
                    }
                </tbody>
            </MudSimpleTable>
        }
        else
        {
            @if (IsLoading)
            {
                <div class="d-flex justify-center">
                    <MudProgressCircular Indeterminate Size="Size.Large" Color="Color.Primary" />
                </div>
            }
            else
            {
                <div class="d-flex justify-center">
                    <MudText Typo="Typo.h5">No categories found.</MudText>
                </div>
            }
        }
    </MudItem>
</MudGrid>

@code {
    List<CategoryDTO> allCategories = new();
    bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(LoadCategories);
    }

    private void LoadCategories()
    {
        allCategories = _categoryRepository.GetAll().ToList();
        IsLoading = false;
    }
}
