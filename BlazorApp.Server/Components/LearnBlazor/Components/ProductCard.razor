<MudItem xs="12" sm="6" md="4" lg="3" xl="2">
    <MudCard Style="height:100%" @onclick="()=>OnChangeSelectedProduct(Product)">
        <MudCardContent>
            <MudText Typo="Typo.h6">Product #@Product.Id</MudText>
            <MudText GutterBottom>Name: @Product.Name</MudText>
            <MudCheckBox Color="Color.Primary" Label="Add to Favorites" CheckedChanged="FavoriteCountUpdate" />
            <MudCheckBox Color="Color.Primary" Label="Show Properties" @bind-Checked="@Product.IsActive" />
            <MudText>
                @if (@Product.IsActive)
                {
                    @foreach (var prop in Product.Properties)
                    {
                        <p class="mt-1">@(prop.Key): @prop.Value</p>
                    }
                }
            </MudText>
            <EditDeleteButtons IsActive="@Product.IsActive" />
        </MudCardContent>
    </MudCard>
</MudItem>

@code {
    [Parameter] public Demo_Product Product { get; set; }
    [Parameter] public EventCallback<bool> FavoriteCountUpdate { get; set; }
    [Parameter] public EventCallback<Demo_Product> ChangeSelectedProduct { get; set; }

    private async Task OnChangeSelectedProduct(Demo_Product product)
    {
        await ChangeSelectedProduct.InvokeAsync(product);
    }
}
